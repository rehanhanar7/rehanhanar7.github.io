{
  "name": "03-Figma Mcp + RAG => Minify data",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=Get component code from the vector database with below description {{ $json.figma_mcp }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        544,
        80
      ],
      "id": "70f727c9-6469-4929-8d12-9ab13d5c3ce5",
      "name": "AI Agent"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        592,
        624
      ],
      "id": "69d63b3c-9c95-4566-9316-f14802c27f45",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "description": "Component code, example Code Implementations of dropdown, text field, tabs and checkbox components"
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1.1,
      "position": [
        1024,
        272
      ],
      "id": "2a5d72f4-02ce-4f12-b963-ffc761602eea",
      "name": "Answer questions with a vector store"
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "wcc-codebase",
          "mode": "list",
          "cachedResultName": "wcc-codebase"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        1024,
        448
      ],
      "id": "f5612680-0e15-4acc-a4eb-fe1ad38bb419",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "uc5RUGuuhNRLK4MM",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "dimensions": 512
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        768,
        624
      ],
      "id": "d94306ba-ca3c-4a13-8954-aa4340a5666f",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "C4yf3HBjwJfyAvLp",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "endpointUrl": "http://host.docker.internal:3845/sse",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.1,
      "position": [
        -384,
        528
      ],
      "id": "2d3bc2e1-174b-48d5-939c-ee63180fd007",
      "name": "MCP Client"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are connected to the Figma MCP client. From the raw MCP data of the selected node(s), extract the layout structure (rows, columns, alignment) and map UI elements to UPS component names.\\n\\nUse only these components:\\n- ups-text-fields\\n- ups-checkbox-group\\n- ups-checkbox\\n- ups-ac-dropdown with ups-ac-option\\n- ups-ac-tabset with ups-ac-tab\\n- generic (if unknown)\\n\\nOutput only clean prompt reflecting the exact structure and alignment from the MCP data in minified format so tokens can be saved. ",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -464,
        80
      ],
      "id": "d2df1c0b-b898-447f-9d88-80974086f40d",
      "name": "AI Agent1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -848,
        80
      ],
      "id": "1d5283c3-1358-4cff-a47c-c256f506c5bd",
      "name": "When chat message received",
      "webhookId": "5e6666fa-86ba-4ea0-84d5-f5fce11c86ab"
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        240,
        576
      ],
      "id": "7cfec29c-0518-4678-b219-180f86d69cad",
      "name": "Azure OpenAI Chat Model",
      "credentials": {
        "azureOpenAiApi": {
          "id": "pMy3h7vMwKpRn3Wz",
          "name": "Azure Open AI account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a code generator. Input is a JSON layout with rows, columns, and UPS component names. Use the vector database to fetch the correct Angular code snippets for each component. Then generate a complete Angular component.\\n\\n### Rules:\\n1. Use the JSON structure directly for Bootstrap grid (rows, columns, component order).\\n2. For each component name, fetch details from the vector DB and place the correct Angular snippet.\\n3. Output valid Angular component code with two files:\\n   - component.html → Bootstrap grid with UPS components\\n   - component.ts → Angular class with selector, templateUrl, and standard setup\\n4. Do not explain. Output only code.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -128,
        1040
      ],
      "id": "f2254bf6-5bd8-44c3-8ad3-7e059057cddb",
      "name": "AI Agent2"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -16,
        1584
      ],
      "id": "0b43ecb9-132e-44cb-b2ce-df70335a9889",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "description": "Component code, example Code Implementations of dropdown, text field, tabs and checkbox components"
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1.1,
      "position": [
        416,
        1232
      ],
      "id": "41ff4fec-4b8d-4e9e-a62a-333b8fd39281",
      "name": "Answer questions with a vector store1"
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "wcc-codebase",
          "mode": "list",
          "cachedResultName": "wcc-codebase"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        416,
        1408
      ],
      "id": "a988b31c-baa1-416b-bb9b-7a0f032f7067",
      "name": "Pinecone Vector Store1"
    },
    {
      "parameters": {
        "options": {
          "dimensions": 512
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        160,
        1584
      ],
      "id": "2a6e8e4d-a875-4213-acc5-5cfe61386e10",
      "name": "Embeddings OpenAI1",
      "disabled": true
    },
    {
      "parameters": {
        "endpointUrl": "http://host.docker.internal:3845/sse",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.1,
      "position": [
        -752,
        1568
      ],
      "id": "f0d11135-1eaa-4832-8a46-c74c541bb166",
      "name": "MCP Client1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are connected to the Figma MCP client. From the raw MCP data of the selected node(s), extract the layout structure (rows, columns, alignment) and map UI elements to UPS component names.\\n\\nUse only these components:\\n- ups-text-fields\\n- ups-checkbox-group\\n- ups-checkbox\\n- ups-ac-dropdown with ups-ac-option\\n- ups-ac-tabset with ups-ac-tab\\n- generic (if unknown)\\n\\nOutput only clean JSON reflecting the exact structure and alignment from the MCP data.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -864,
        1040
      ],
      "id": "3737c827-3640-4712-a976-c3f7a4f7f1a8",
      "name": "AI Agent3",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -432,
        1616
      ],
      "id": "f411aca6-450d-49ca-93e8-3ff220bbd827",
      "name": "OpenAI Chat Model",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "973b0a51-b5e5-4864-93d3-1ba33b217c4b",
              "name": "figma_mcp",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        32,
        80
      ],
      "id": "8df0ba33-06b4-4e2d-b017-84cc792bbc91",
      "name": "Edit Fields"
    }
  ],
  "pinData": {},
  "connections": {
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Azure OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "AI Agent3",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store1",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Answer questions with a vector store1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6c02ee98-c8bf-4cb7-9ab2-6314a1af2606",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "813dc49ed82e1234feb06e40becd5a8544d27c994a96cd0f228a42c7420ea04c"
  },
  "id": "eeZH7eAaQNnqsZ2l",
  "tags": []
}