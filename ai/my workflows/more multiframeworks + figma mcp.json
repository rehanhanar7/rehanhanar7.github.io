{
  "name": "more multiframeworks + figma mcp",
  "nodes": [
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Webhook').item.json.headers['true-client-ip'] }}"
      },
      "id": "08f892dc-67d6-4277-b98f-b75b6ed58dde",
      "name": "Simple Memory",
      "position": [
        720,
        1616
      ],
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "description": "Component code, example Code Implementations of dropdown, text field, tabs and checkbox components"
      },
      "id": "6ade7677-20fd-408e-9742-4575ecd66fa0",
      "name": "Answer questions with a vector store",
      "position": [
        1152,
        1264
      ],
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "cachedResultName": "wcc-codebase",
          "mode": "list",
          "value": "wcc-codebase"
        },
        "options": {}
      },
      "id": "7204c8ee-38b3-4b12-8aa6-74cc58814d0d",
      "name": "Pinecone Vector Store",
      "position": [
        1152,
        1440
      ],
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "credentials": {
        "pineconeApi": {
          "id": "hYVKYwSf9OgWX19z",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "dimensions": 512
        }
      },
      "id": "b044b223-e791-4828-82f9-6d28ee579983",
      "name": "Embeddings OpenAI",
      "position": [
        896,
        1616
      ],
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "w0rsv2KWT7Mo9zkW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "8e55e4f5-3a73-4296-8a69-4d54c0e1d18d",
      "name": "Azure OpenAI Chat Model",
      "position": [
        480,
        1568
      ],
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "credentials": {
        "azureOpenAiApi": {
          "id": "7j5lXc6kJTTw52Ta",
          "name": "Azure Open AI account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "wcc-docs-with-auth",
        "responseMode": "responseNode",
        "options": {
          "binaryPropertyName": "chatInput"
        }
      },
      "id": "67facd73-66c1-48cf-aeed-dc84e60e7687",
      "name": "Webhook",
      "position": [
        -704,
        1072
      ],
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "webhookId": "7222db21-4f18-4353-a8f1-4dbf73df9bce"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.output }}",
        "options": {}
      },
      "id": "d59eac5f-3f81-4fa5-8647-35af633acea4",
      "name": "Respond to Webhook",
      "position": [
        1520,
        1072
      ],
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "auth-condition",
              "leftValue": "={{ $json.body.password }}",
              "operator": {
                "operation": "equals",
                "type": "string"
              },
              "rightValue": "wcc-rag-docs-chat-with-auth"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "41d1ebad-396d-4eb6-8b42-3264c4f8cd07",
      "name": "Password Check",
      "position": [
        -320,
        1072
      ],
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\"error\": \"Access denied. This workflow is inaccessible.\", \"status\": 401}",
        "options": {
          "responseCode": 401
        }
      },
      "id": "3135d3df-dee1-4e82-abfa-59ccda63fe18",
      "name": "Authentication Error",
      "position": [
        64,
        1248
      ],
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.framework }}",
                    "rightValue": "ups",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "98275e88-cda3-47cc-b47a-63498586813e"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3c1a8d14-08bb-4ce6-9e00-19c60b326ae4",
                    "leftValue": "={{ $json.body.framework }}",
                    "rightValue": "react",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "62a57981-6b0b-4089-95c5-d77ac9244d65",
                    "leftValue": "={{ $json.body.framework }}",
                    "rightValue": "vue",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3eb0a255-1196-4107-a2e0-aa82f79f2b29",
                    "leftValue": "={{ $json.body.framework }}",
                    "rightValue": "android",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b7c0f980-ad0e-42df-903c-2b50690a0c4e",
                    "leftValue": "={{ $json.body.framework }}",
                    "rightValue": "reactnative",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7633c7af-defa-47c5-a8fc-608188c47146",
                    "leftValue": "={{ $json.body.framework }}",
                    "rightValue": "ios",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0e3514fb-8957-4176-810e-da3cef06b89f",
                    "leftValue": "={{ $json.body.framework }}",
                    "rightValue": "ionic",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "26ff149f-8fdf-4acd-9f43-b4ab710b758c",
                    "leftValue": "={{ $json.body.framework }}",
                    "rightValue": "htmlcssjavascript",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        416,
        528
      ],
      "id": "8574fd36-1543-42a5-836f-a81c0e0d2c62",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Get component code from the vector database tool with below description {{ $json.body.chatInput }} and component definitions given here {{ $json.body.figma_mcp_prompt }}. Dont use html for formatting the code. ",
        "options": {}
      },
      "id": "ce86c558-933b-4f50-859d-1b7ebea55f98",
      "name": "WCC AI Agent",
      "position": [
        896,
        1056
      ],
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert front-end developer specializing in React. When given a component description, user story, or UI requirements, generate clean, production-ready code for React. Follow best practices, use idiomatic patterns, and include all necessary imports, props, and event handling. If the user requests a specific framework, generate code for that framework only. Output only the code, no explanations. Generate code for user message : {{ $json.body.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        880,
        720
      ],
      "id": "d03c0d91-ec73-450f-8a5c-5f093f1e94c9",
      "name": "React AI Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert front-end developer specializing in VUE. When given a component description, user story, or UI requirements, generate clean, production-ready code for VUE. Follow best practices, use idiomatic patterns, and include all necessary imports, props, and event handling. If the user requests a specific framework, generate code for that framework only. Output only the code, no explanations. Generate code for user message : {{ $json.body.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        880,
        448
      ],
      "id": "99445108-b012-4919-a458-d39b54cecb37",
      "name": "VUE AI AGENT"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert Android developer specializing in Kotlin and Jetpack Compose. When given a component description, user story, or UI requirements, generate clean, production-ready Android code. Follow best practices, use idiomatic Kotlin patterns, and include all necessary imports, classes, and event handling. If the user requests a specific Android library (e.g., Retrofit, Room), generate code using that library only. Output only the code, no explanations. Generate code for user message : {{ $json.body.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        880,
        208
      ],
      "id": "62479593-de74-4370-83a5-4c8a745c6fdc",
      "name": "ANDROID AI AGENT"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert React Native developer specializing in modern JavaScript/TypeScript. When given a component description, user story, or UI requirements, generate clean, production-ready React Native code. Follow best practices, use idiomatic React patterns with hooks, and include all necessary imports, props, and event handling. If the user requests a specific React Native library (e.g., React Navigation, Redux), generate code using that library only. Output only the code, no explanations. Generate code for user message : {{ $json.body.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        880,
        -32
      ],
      "id": "3b127ae6-adfb-4a53-9e87-de455c005d5f",
      "name": "REACT NATIVE AI AGENT"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert iOS developer specializing in Swift and SwiftUI. When given a component description, user story, or UI requirements, generate clean, production-ready iOS code. Follow best practices, use idiomatic Swift patterns, and include all necessary imports, structs, and event handling. If the user requests a specific iOS framework (e.g., CoreData, Combine), generate code using that framework only. Output only the code, no explanations. Generate code for user message : {{ $json.body.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        880,
        -288
      ],
      "id": "5799255b-46c4-4372-829d-258c580f6d4f",
      "name": "iOS"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert Ionic developer specializing in Angular and Capacitor. When given a component description, user story, or UI requirements, generate clean, production-ready Ionic code. Follow best practices, use idiomatic Angular patterns, and include all necessary imports, components, and event handling. If the user requests a specific Ionic/Angular library (e.g., Ionic Storage, NgRx), generate code using that library only. Output only the code, no explanations. Generate code for user message : {{ $json.body.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        896,
        -544
      ],
      "id": "8bcc8839-e695-476e-a579-5a20481a53ae",
      "name": "ionic"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert front-end developer specializing in HTML, CSS, and vanilla JavaScript. When given a component description, user story, or UI requirements, generate clean, production-ready code. Follow best practices, use semantic HTML, modern CSS (Flexbox/Grid), and idiomatic JavaScript patterns. Include all necessary markup, styling, and event handling in a single snippet. Do not use external frameworks or libraries unless explicitly requested. Output only the code, no explanations. Generate code for user message : {{ $json.body.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        896,
        -800
      ],
      "id": "ae80483b-89dd-423a-a93a-38c21bc241b9",
      "name": "vanila js html css"
    },
    {
      "parameters": {
        "endpointUrl": "http://host.docker.internal:3845/sse",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.1,
      "position": [
        256,
        1584
      ],
      "id": "1460e1b1-54f9-4d34-8d10-b77e562b5ed7",
      "name": "MCP Client"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "auth-condition",
              "leftValue": "={{ $json.body.figma_id }}",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "rightValue": "wcc-rag-docs-chat-with-auth"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "26c40136-a797-4688-8636-95c061df18fc",
      "name": "figma_id check",
      "position": [
        -320,
        592
      ],
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are connected to the Figma MCP client. From the raw MCP data of the selected node(s), extract the layout structure (rows, columns, alignment) and map UI elements to UPS component names. Use only these components: - ups-text-fields - ups-checkbox-group - ups-checkbox - ups-ac-dropdown with ups-ac-option - ups-ac-tabset with ups-ac-tab - generic (if unknown). Output only clean prompt reflecting the exact structure and alignment from the MCP data in minified format so tokens can be saved. Send output in json format as {\\\"chatInput\\\":\\\"{{ $json.body.chatInput }}\\\",\\\"framework\\\":\\\"{{ $json.body.framework }}\\\",\\\"figma_id\\\":\\\"{{ $json.body.figma_id }}\\\",\\\"figma_mcp_prompt\\\":\\\"<minified structure here>\\\"}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        0,
        448
      ],
      "id": "1fd87375-9138-485f-8167-1dd2d4b71b5e",
      "name": "Figma MCP Agent",
      "alwaysOutputData": true
    }
  ],
  "pinData": {},
  "connections": {
    "Answer questions with a vector store": {
      "ai_tool": [
        [
          {
            "node": "WCC AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Azure OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "WCC AI Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "React AI Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "VUE AI AGENT",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "iOS",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "REACT NATIVE AI AGENT",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "ANDROID AI AGENT",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "ionic",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "vanila js html css",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Figma MCP Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Password Check": {
      "main": [
        [
          {
            "node": "figma_id check",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Authentication Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "WCC AI Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "React AI Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "VUE AI AGENT",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "iOS",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "REACT NATIVE AI AGENT",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "ANDROID AI AGENT",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "ionic",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "vanila js html css",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Figma MCP Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Password Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "WCC AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "React AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "VUE AI AGENT",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ANDROID AI AGENT",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "REACT NATIVE AI AGENT",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "iOS",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ionic",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "vanila js html css",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WCC AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "React AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "VUE AI AGENT": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ANDROID AI AGENT": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "REACT NATIVE AI AGENT": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "iOS": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ionic": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "vanila js html css": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "Figma MCP Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "figma_id check": {
      "main": [
        [
          {
            "node": "Figma MCP Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Figma MCP Agent": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5252bfcb-4b52-4215-af2f-d871b37ca16f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ad1f525dd68c8b5cc07057842bb18d93782eacfec13fa9bf0b0e5726db5fcd24"
  },
  "id": "ZyotWWEjCEuPrOts",
  "tags": []
}